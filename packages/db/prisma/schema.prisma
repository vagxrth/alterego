// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String   @id @default(uuid())
  username       String
  profilePicture String
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}

model Model {
  id             String           @id @default(uuid())
  name           String
  type           ModelType
  age            Int
  ethinicity     ModelEthinicity
  eyeColor       ModelEyeColor
  bald           Boolean
  userId         String
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  trainingImages TrainingImages[]
  outputImages   OutputImages[]
}

model TrainingImages {
  id       String @id @default(uuid())
  imageURL String
  modelId  String
  model    Model  @relation(fields: [modelId], references: [id])
}

model OutputImages {
  id        String           @id @default(uuid())
  imageURL  String
  userId    String
  modelId   String
  prompt    String
  status    ModelImageStatus @default(Pending)
  createdAt DateTime         @default(now())
  updatedAt DateTime         @updatedAt
  model     Model            @relation(fields: [modelId], references: [id])
}

model Packs {
  id      String        @id @default(uuid())
  name    String
  prompts PackPrompts[]
}

model PackPrompts {
  id     String @id @default(uuid())
  prompt String
  packId String
  pack   Packs  @relation(fields: [packId], references: [id])
}

enum ModelType {
  Man
  Woman
  Other
}

enum ModelEthinicity {
  White
  Black
  American
  Indian
  EastAsian
}

enum ModelEyeColor {
  Brown
  Black
  Hazel
  Blue
  Green
  Gray
}

enum ModelImageStatus {
  Pending
  Generated
  Failed
}
